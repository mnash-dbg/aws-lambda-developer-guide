AWSTemplateFormatVersion: 2010-09-09
Description: An AWS Lambda application that connects to an EFS file system in the VPC to share files.
Transform: AWS::Serverless-2016-10-31
Parameters:
  vpcStackName:
    Default: ""
    Description: VPC and file system stack name
    Type: String
  mountPath:
    Default: "/mnt/efs0"
    Description: File system mount path
    Type: String
  readIterations:
    Default: 1
    Description: Number of reads of the file to make
    Type: Number
Conditions:
  testS3: !Equals [!Ref vpcStackName, ""]
  testEfs: !Not [!Condition testS3]
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Condition: testS3
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucket
  efsFunction:
    Type: AWS::Serverless::Function
    Condition: testEfs
    Properties:
      CodeUri: function/
      Description: Use a file system.
      FileSystemConfigs:
        - LocalMountPath: !Ref mountPath
          Arn: 
            Fn::ImportValue: !Sub "${vpcStackName}-accesspoint"
      Environment:
          Variables:
            vpcStackName: !Ref vpcStackName
            mountPath: !Ref mountPath
            readIterations: !Ref readIterations
      MemorySize: 128
      Timeout: 15
      Runtime: nodejs12.x
      Tracing: Active
      Handler: index.handler
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
                !Sub "${vpcStackName}-vpc-sg"
        SubnetIds:
          - Fn::ImportValue:
                !Sub "${vpcStackName}-subnet-a"
          - Fn::ImportValue:
                !Sub "${vpcStackName}-subnet-b"
      # Function's execution role
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - AmazonElasticFileSystemClientReadWriteAccess
        - AWSXRayDaemonWriteAccess
  s3Function:
    Type: AWS::Serverless::Function
    Condition: testS3
    Properties:
      CodeUri: function/
      Description: Use S3.
      Environment:
          Variables:
            mountPath: !Ref mountPath
            readIterations: !Ref readIterations
            bucket: !Ref S3Bucket
            readFromCache: ""
      MemorySize: 128
      Timeout: 15
      Runtime: nodejs12.x
      Tracing: Active
      Handler: index.handler
      # Function's execution role
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - AWSXRayDaemonWriteAccess
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
